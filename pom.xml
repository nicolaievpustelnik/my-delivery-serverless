<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.0</version>
        <relativePath/>
    </parent>
    <groupId>com.lib</groupId>
    <artifactId>save-product</artifactId>
    <version>1.0.0</version>
    <name>save-product</name>
    <description>Software delivery</description>

    <properties>
        <java.version>17</java.version>
        <maven-compiler-plugin.source>${java.version}</maven-compiler-plugin.source>
        <maven-compiler-plugin.target>${java.version}</maven-compiler-plugin.target>

        <aws.java.sdk.version>2.20.58</aws.java.sdk.version>
        <lambda-utils.version>1.9.0-SNAPSHOT</lambda-utils.version>
        <mapstruct.version>1.5.3.Final</mapstruct.version>
        <lombok.version>1.18.26</lombok.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>

        <spring-boot-maven-plugin.version>3.1.0</spring-boot-maven-plugin.version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>dynamodb</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>software.amazon.awssdk</groupId>
                    <artifactId>netty-nio-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>software.amazon.awssdk</groupId>
                    <artifactId>apache-client</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apache-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <artifactId>mapstruct</artifactId>
            <groupId>org.mapstruct</groupId>
            <version>${mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>com.toyota.java</groupId>
            <artifactId>lambda-utils</artifactId>
            <version>${lambda-utils.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${aws.java.sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Build to generate native image using GraalVM-->
    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <configuration>
                            <imageName>${project.artifactId}</imageName>
                            <buildArgs>
                                <buildArg>--enable-url-protocols=http</buildArg>
                            </buildArgs>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                            <execution>
                                <id>test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>native-zip</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <inherited>false</inherited>
                            </execution>
                        </executions>
                        <configuration>
                            <finalName>${project.artifactId}</finalName>
                            <descriptors>
                                <descriptor>src/main/resources/assembly/native.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- Build to generate jar-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <!-- The version of Spring Boot Maven plugin to be used by the shade plugin -->
                        <version>${spring-boot-maven-plugin.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <!-- The 'shade' goal creates the shaded jar -->
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- Do not create a reduced POM that excludes the shaded dependencies -->
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <!-- Attach the shaded jar to the project instead of replacing the original jar -->
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <!-- Adds a classifier to the shaded jar -->
                            <shadedClassifierName>aws</shadedClassifierName>
                            <transformers>
                                <!-- Appends together all 'META-INF/spring.handlers' from dependency JARs -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                <!-- Merges all 'META-INF/spring.factories' from dependency JARs -->
                                <transformer implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
                                    <resource>META-INF/spring.factories</resource>
                                </transformer>
                                <!-- Appends together all 'META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports' from dependency JARs -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports</resource>
                                </transformer>
                                <!-- Appends together all 'META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports' from dependency JARs -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports</resource>
                                </transformer>
                                <!-- Appends together all 'META-INF/spring.schemas' from dependency JARs -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                                <!-- Appends together all 'META-INF/spring.components' from dependency JARs -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.components</resource>
                                </transformer>
                                <!-- Sets 'com.lib.delivery.Application' as the main class to run when the shaded jar is started -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.lib.delivery.Application</mainClass>
                                </transformer>
<!--                                <transformer-->
<!--                                        implementation="com.github.
edwgiz.mavenShadePlugin.log4j2CacheTransformer.PluginsCacheFileTransformer">-->
<!--                                </transformer>-->
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <artifactId>lombok</artifactId>
                            <groupId>org.projectlombok</groupId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <artifactId>mapstruct-processor</artifactId>
                            <groupId>org.mapstruct</groupId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <groupId>org.projectlombok</groupId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                    <showWarnings>true</showWarnings>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/dto/**</exclude>
                        <exclude>**/configuration/**</exclude>
                        <exclude>**/entity/**</exclude>
                        <exclude>**/util/**</exclude>
                        <exclude>**/*Application.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
